{
  "name": "@rhinestone/module-template",
  "description": "A Foundry template for building modules using the ModuleKit",
  "license": "MIT",
  "version": "0.3",
  "author": {
    "name": "kopy-kat",
    "url": "https://rhinestone.wtf"
  },
  "bugs": {
    "url": "https://github.com/rhinestonewtf/module-template/issues"
  },
  "dependencies": {
    "@prb/math": "^4.0.2",
    "@safe-global/safe-contracts": "1.4.1-build.0",
    "erc4337-validation": "github:rhinestonewtf/erc4337-validation"
  },
  "devDependencies": {
    "@openzeppelin/contracts": "5.0.1",
    "@rhinestone/modulekit": "github:rhinestonewtf/modulekit",
    "@ERC4337/account-abstraction": "github:kopy-kat/account-abstraction#develop",
    "@ERC4337/account-abstraction-v0.6": "github:eth-infinitism/account-abstraction#v0.6.0",
    "ds-test": "github:dapphub/ds-test",
    "erc7579": "github:erc7579/erc7579-implementation",
    "forge-std": "github:foundry-rs/forge-std",
    "frame-verifier": "github:Destiner/frame-verifier",
    "prettier": "^2.8.8",
    "sentinellist": "github:zeroknots/sentinellist",
    "solady": "github:Vectorized/solady",
    "solarray": "github:sablier-labs/solarray",
    "solhint": "^4.1.1",
    "solmate": "github:transmissions11/solmate"
  },
  "files": [
    "src",
    "test",
    "script"
  ],
  "homepage": "https://github.com/rhinestonewtf/module-template/#readme",
  "keywords": [
    "blockchain",
    "ethereum",
    "foundry",
    "smart-contracts",
    "solidity",
    "web3"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": "github.com/rhinestonewtf/module-template",
  "scripts": {
    "build": "forge build",
    "build:optimized": "FOUNDRY_PROFILE=optimized forge build",
    "build:smt": "FOUNDRY_PROFILE=smt forge build",
    "clean": "rm -rf artifacts broadcast cache docs out out-optimized out-svg",
    "gas:report": "forge test --gas-report --mp \"./test/integration/**/*.sol\" --nmt \"test(Fuzz)?_RevertWhen_\\w{1,}?\"",
    "gas:snapshot": "forge snapshot --mp \"./test/integration/**/*.sol\" --nmt \"test(Fuzz)?_RevertWhen_\\w{1,}?\"",
    "gas:snapshot:optimized": "bun run build:optimized && FOUNDRY_PROFILE=test-optimized forge snapshot --mp \"./test/integration/**/*.sol\" --nmt \"test(Fork)?(Fuzz)?_RevertWhen_\\w{1,}?\"",
    "lint": "bun run lint:sol && bun run prettier:check",
    "lint:sol": "forge fmt --check && bun solhint \"{script,src,test}/**/*.sol\"",
    "prepack": "bun install && bash ./shell/prepare-artifacts.sh",
    "prettier:check": "prettier --check \"**/*.{json,md,svg,yml}\"",
    "prettier:write": "prettier --write \"**/*.{json,md,svg,yml}\"",
    "test": "forge test",
    "test:lite": "FOUNDRY_PROFILE=lite forge test",
    "test:optimized": "bun run build:optimized && FOUNDRY_PROFILE=test-optimized forge test"
  }
}
